plugins {
    id 'org.groovymc.modsdotgroovy' version '1.4.1'
    id 'com.matyrobbrt.mc.registrationutils' version '1.20-1.1.0'
}

modsDotGroovy {
    dslVersion = '1.5.1'
    platform = 'multiloader'
    multiloader {
        common = project(':Common')
        forge = [project(':Forge')]
        fabric = [project(':Fabric')]
    }
}

registrationUtils {
    group 'shadows.placebo.reg'
    projects {
        Fabric { type 'fabric' } // The fabric project
        Forge { type 'forge' } // The forge project
        Common { type 'common' } // The common project
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'maven-publish'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()

    jar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
        manifest {
            attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : project.jar.archiveVersion,
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestamp'              : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Built-On-Minecraft'      : minecraft_version
            ])
        }
    }

    sourcesJar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
    }

    repositories {

        mavenCentral()

        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }

        maven {
            name = 'BlameJared Maven (CrT / Bookshelf)'
            url = 'https://maven.blamejared.com'
        }

        maven {
            url = 'https://s01.oss.sonatype.org/content/groups/staging/'
            content {
                includeModule('io.github.matyrobbrt', 'eventdispatcher')
            }
        }

        maven {
            url = "https://maven.theillusivec4.top/"
            content {
                includeGroup 'top.theillusivec4.curios'
            }
        }

        mavenLocal {
            content {
                includeGroup 'io.github.matyrobbrt'
            }
        }

        maven {
            url = 'https://jitpack.io'
            content {
                includeGroup('com.github.llamalad7.mixinextras')
            }
        }
    }

    dependencies {
        compileOnly group:'com.google.auto.service', name:'auto-service', version: '1.0.1'
        if (name != 'Common') {
            annotationProcessor group:'com.google.auto.service', name:'auto-service', version: '1.0.1'
        }
    }

    tasks.withType(JavaCompile).configureEach {

        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {

        enabled = false
    }

    publishing {
        repositories {
            maven {
                name = 'MatyrobbrtMaven'
                url = 'https://maven.matyrobbrt.com/snapshots'
                credentials {
                    username = findProperty('matyrobbrtMavenUser') ?: ''
                    password = findProperty('matyrobbrtMavenPassword') ?: ''
                }
            }
        }
    }
}
